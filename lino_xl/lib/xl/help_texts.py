# -*- coding: UTF-8 -*-
# generated by lino.sphinxcontrib.help_text_builder
from __future__ import unicode_literals
from django.utils.translation import ugettext_lazy as _
help_texts = {
    'lino_xl.lib.accounts.Plugin' : _("""See lino.core.plugin.Plugin."""),
    'lino_xl.lib.accounts.Plugin.ref_length' : _("""The max_length of the Reference field of an account."""),
    'lino_xl.lib.accounts.choicelists.Sheet' : _("""Base class for a financial statement."""),
    'lino_xl.lib.accounts.choicelists.Balance' : _("""In financial accounting, a balance sheet or statement of financial
position is a summary of the financial balances of an
organisation."""),
    'lino_xl.lib.accounts.choicelists.Earnings' : _("""https://en.wikipedia.org/wiki/Statement_of_comprehensive_income#Requirements_of_IFRS"""),
    'lino_xl.lib.accounts.choicelists.AccountType' : _("""The base class for all account types."""),
    'lino_xl.lib.accounts.choicelists.AccountTypes' : _("""The global list of account types. See AccountType."""),
    'lino_xl.lib.accounts.choicelists.AccountTypes.item_class' : _("""alias of AccountType"""),
    'lino_xl.lib.accounts.fields.DebitOrCreditStoreField' : _("""This is used as lino_atomizer_class for DebitOrCreditField."""),
    'lino_xl.lib.accounts.fields.DebitOrCreditField' : _("""A field that stores either DEBIT or CREDIT (see
lino_xl.lib.accounts.utils)."""),
    'lino_xl.lib.accounts.fields.DebitOrCreditField.lino_atomizer_class' : _("""alias of DebitOrCreditStoreField"""),
    'lino_xl.lib.accounts.models.Group' : _("""A group of accounts."""),
    'lino_xl.lib.accounts.models.Groups' : _("""The global table of all account groups."""),
    'lino_xl.lib.accounts.models.Groups.model' : _("""alias of Group"""),
    'lino_xl.lib.accounts.models.Account' : _("""An account is an item of an account chart used to collect
ledger transactions or other accountable items."""),
    'lino_xl.lib.accounts.models.Account.name' : _("""The multilingual designation of this account, as the users see
it."""),
    'lino_xl.lib.accounts.models.Account.group' : _("""The account group to which this account belongs.  Points to
an instance of Group.  If this field is empty, the
account won't appear in certain reports."""),
    'lino_xl.lib.accounts.models.Account.seqno' : _("""The sequence number of this account within its group."""),
    'lino_xl.lib.accounts.models.Account.ref' : _("""An optional unique name which can be used to reference a given
account."""),
    'lino_xl.lib.accounts.models.Account.type' : _("""The account type of this account.  This points to an item of
AccountTypes."""),
    'lino_xl.lib.accounts.models.Account.needs_partner' : _("""Whether bookings to this account need a partner specified."""),
    'lino_xl.lib.accounts.models.Account.default_amount' : _("""The default amount to book in bank statements or journal
entries when this account has been selected manually. The
default booking direction is that of the type."""),
    'lino_xl.lib.addresses.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.addresses.mixins.AddressOwner' : _("""Base class for the "addressee" of any address."""),
    'lino_xl.lib.addresses.mixins.AddressOwnerChecker' : _("""Checks for the following plausibility problems:"""),
    'lino_xl.lib.addresses.mixins.AddressOwnerChecker.model' : _("""alias of AddressOwner"""),
    'lino_xl.lib.addresses.models.Address' : _("""Inherits fields from
lino_xl.lib.countries.CountryRegionCity (country, region,
city. zip_code) and lino_xl.lib.contacts.AddresssLocation
(street, street_no, ...)"""),
    'lino_xl.lib.addresses.models.Address.data_source' : _("""Pointer to choicelists.DataSources."""),
    'lino_xl.lib.addresses.models.Address.primary' : _("""Whether this address is the primary address of its owner.
Setting this field will automatically uncheck any previousl
primary addresses and update the owner's address fields."""),
    'lino_xl.lib.appypod.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.appypod.choicelists.AppyBuildMethod' : _("""Base class for Build Methods that use .odt templates designed
for appy.pod."""),
    'lino_xl.lib.appypod.choicelists.AppyOdtBuildMethod' : _("""Generates .odt files from .odt templates."""),
    'lino_xl.lib.appypod.choicelists.AppyPdfBuildMethod' : _("""Generates .pdf files from .odt templates."""),
    'lino_xl.lib.appypod.choicelists.AppyRtfBuildMethod' : _("""Generates .rtf files from .odt templates."""),
    'lino_xl.lib.appypod.choicelists.AppyDocBuildMethod' : _("""Generates .doc files from .odt templates."""),
    'lino_xl.lib.appypod.mixins.PrintLabelsAction' : _("""Add this action to your table, which is expected to execute on a
model which implements
Addressable."""),
    'lino_xl.lib.beid.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.beid.Plugin.holder_model' : _("""The one and only model on this site which implements
BeIdCardHolder."""),
    'lino_xl.lib.beid.Plugin.data_collector_dir' : _("""When this is a non-empty string containing a directory name on the
server, then Lino writes the raw data of every eid card into a
text file in this directory."""),
    'lino_xl.lib.beid.Plugin.read_only_simulate' : _("""Whether to just simulate."""),
    'lino_xl.lib.beid.choicelists.CivilStates' : _("""The global list of civil states that a client can have.  This
is the list of choices for the civil_state field of a
Client."""),
    'lino_xl.lib.beid.choicelists.CivilStates.single' : _("""célibataire : vous n’avez pas de partenaire auquel vous êtes
officiellement lié"""),
    'lino_xl.lib.beid.choicelists.CivilStates.married' : _("""marié(e) : vous êtes légalement marié"""),
    'lino_xl.lib.beid.choicelists.CivilStates.widowed' : _("""veuf (veuve) / Verwitwet : vous êtes légalement marié mais
votre partenaire est décédé"""),
    'lino_xl.lib.beid.choicelists.CivilStates.divorced' : _("""divorcé(e) (Geschieden) : votre mariage a été juridiquement dissolu"""),
    'lino_xl.lib.beid.choicelists.CivilStates.de_facto_separated' : _("""De facto separated (Séparé de fait, faktisch getrennt)"""),
    'lino_xl.lib.beid.choicelists.CivilStates.separated' : _("""Legally separated, aka "Separated as to property" (Séparé de
corps et de biens, Getrennt von Tisch und Bett)"""),
    'lino_xl.lib.beid.choicelists.CivilStates.cohabitating' : _("""Cohabitating (cohabitant, zusammenlebend)"""),
    'lino_xl.lib.beid.choicelists.ResidenceTypes' : _("""Types of registries for the Belgian residence."""),
    'lino_xl.lib.beid.choicelists.BeIdCardTypes' : _("""A list of Belgian identity card types."""),
    'lino_xl.lib.beid.mixins.BeIdCardHolder' : _("""Mixin for models which represent an eid card holder.
Currently only Belgian eid cards are tested.
Concrete subclasses must also inherit from lino.mixins.Born."""),
    'lino_xl.lib.beid.mixins.BeIdCardHolder.national_id' : _("""The SSIN. It is a nullable char field declared unique. It
is not validated directly because that would cause problems
with legacy data where SSINs need manual control. See also
BeIdCardHolderChecker."""),
    'lino_xl.lib.beid.mixins.BeIdCardHolder.nationality' : _("""The nationality. This is a pointer to
countries.Country which should
contain also entries for refugee statuses."""),
    'lino_xl.lib.beid.mixins.BeIdCardHolder.image' : _("""Virtual field which displays the picture."""),
    'lino_xl.lib.beid.mixins.BeIdCardHolder.validate_national_id' : _("""Whether to validate the national_id immediately before
saving a record.  If this is False, the national_id
might contain invalid values which would then cause plausibility
problems."""),
    'lino_xl.lib.beid.mixins.BeIdCardHolder.card_issuer' : _("""The administration who issued this ID card."""),
    'lino_xl.lib.beid.mixins.BeIdCardHolderChecker' : _("""Invalid NISSes are not refused à priori using a ValidationError
(see BeIdCardHolder.national_id), but this checker reports
them."""),
    'lino_xl.lib.beid.mixins.BeIdCardHolderChecker.model' : _("""alias of BeIdCardHolder"""),
    'lino_xl.lib.blogs.models.Entry' : _("""A blog entry is a short article with a title, published on a given
date and time by a given user."""),
    'lino_xl.lib.blogs.models.Tagging' : _("""A tag is the fact that a given entry mentions a given topic."""),
    'lino_xl.lib.blogs.models.LatestEntries' : _("""Show the most recent blog entries."""),
    'lino_xl.lib.boards.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.boards.mixins.BoardDecision' : _("""Mixin for models that represent a board decision.  Base class for
lino_welfare.modlib.aids.mixins.Confirmation."""),
    'lino_xl.lib.boards.models.Member' : _("""A Member is when a given ml.contacts.Person
belongs to a given Board."""),
    'lino_xl.lib.cal.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.cal.Plugin.ignore_dates_before' : _("""Ignore dates before the given date.  Set this to None if you want
no limit.
Default value is "7 days before server startup"."""),
    'lino_xl.lib.cal.Plugin.ignore_dates_after' : _("""Ignore dates after the given date.  This should never be None.
Default value is 5 years after today."""),
    'lino_xl.lib.cal.choicelists.Weekdays' : _("""A choicelist with the seven days of a week."""),
    'lino_xl.lib.cal.choicelists.DurationUnit' : _("""Base class for the choices in the DurationUnits
choicelist."""),
    'lino_xl.lib.cal.choicelists.DurationUnits' : _("""A list of possible values for the duration_unit field of an
Event."""),
    'lino_xl.lib.cal.choicelists.DurationUnits.item_class' : _("""alias of DurationUnit"""),
    'lino_xl.lib.cal.choicelists.Recurrencies' : _("""List of possible choices for a 'recurrency' field."""),
    'lino_xl.lib.cal.choicelists.Recurrencies.easter' : _("""Repeat events yearly, moving them together with the Easter
data of that year."""),
    'lino_xl.lib.cal.choicelists.Recurrencies.item_class' : _("""alias of DurationUnit"""),
    'lino_xl.lib.cal.mixins.UpdateEvents' : _("""This is installed as update_events on
EventGenerator."""),
    'lino_xl.lib.cal.mixins.UpdateEventsByEvent' : _("""Update all events of this series. This is installed as
update_events on Event."""),
    'lino_xl.lib.cal.mixins.EventGenerator' : _("""Base class for things that generate a suite of events."""),
    'lino_xl.lib.cal.mixins.RecurrenceSet' : _("""Abstract base for models that express a set of recurrency
rules. This might be combined with EventGenerator into a
same model as done by Reservation."""),
    'lino_xl.lib.cal.mixins.RecurrenceSet.weekdays_text' : _("""A textual formulation of the weekdays where the recurrence
occurs."""),
    'lino_xl.lib.cal.mixins.Reservation' : _("""Base class for lino_xl.lib.rooms.models.Booking and
lino.modlib.courses.models.Course."""),
    'lino_xl.lib.cal.mixins.Component' : _("""Abstract base class for Event and Task."""),
    'lino_xl.lib.cal.mixins.Component.auto_type' : _("""Contains the sequence number if this is an automatically
generated component. Otherwise this field is empty."""),
    'lino_xl.lib.cal.models.RemoteCalendar' : _("""Remote calendars will be synchronized by
lino_xl.lib.cal.management.commands.watch_calendars,
and local modifications will be sent back to the remote calendar."""),
    'lino_xl.lib.cal.models.Room' : _("""A location where calendar events can happen.  For a given Room you
can see the EventsByRoom that happened (or will happen)
there.  A Room has a multilingual name."""),
    'lino_xl.lib.cal.models.Priority' : _("""The priority of a Task or Event."""),
    'lino_xl.lib.cal.models.EventType' : _("""The possible value of the Event.type field."""),
    'lino_xl.lib.cal.models.EventType.is_appointment' : _("""Whether events of this type should be considered
"appointments" (i.e. whose time and place have been agreed
upon with other users or external parties)."""),
    'lino_xl.lib.cal.models.EventType.max_days' : _("""The maximal number of days allowed as duration."""),
    'lino_xl.lib.cal.models.Subscription' : _("""A Suscription is when a User subscribes to a Calendar.
It corresponds to what the extensible CalendarPanel calls "Calendars" """),
    'lino_xl.lib.cal.models.Task' : _("""A Task is when a user plans to to something
(and optionally wants to get reminded about it)."""),
    'lino_xl.lib.cal.models.Task.state' : _("""The state of this Task. one of TaskStates."""),
    'lino_xl.lib.cal.models.RecurrentEvent' : _("""A rule designed to generate a series of recurrent events."""),
    'lino_xl.lib.cal.models.RecurrentEvent.name' : _("""See lino.utils.mldbc.mixins.BabelNamed.name."""),
    'lino_xl.lib.cal.models.RecurrentEvent.every_unit' : _("""Inherited from RecurrentSet.every_unit."""),
    'lino_xl.lib.cal.models.UpdateGuests' : _("""Decide whether it is time to add Guest instances for this event,
and if yes, call suggest_guests() to instantiate them."""),
    'lino_xl.lib.cal.models.ExtAllDayField' : _("""An editable virtual field needed for
communication with the Ext.ensible CalendarPanel
because we consider the "all day" checkbox
equivalent to "empty start and end time fields"."""),
    'lino_xl.lib.cal.models.Event' : _("""A calendar entry is a lapse of time to be visualized in a
calendar."""),
    'lino_xl.lib.cal.models.Event.end_time' : _("""These four fields define the duration of this entry.
Only start_date is mandatory."""),
    'lino_xl.lib.cal.models.Event.summary' : _("""A one-line descriptive text."""),
    'lino_xl.lib.cal.models.Event.description' : _("""A longer descriptive text."""),
    'lino_xl.lib.cal.models.Event.user' : _("""The responsible user."""),
    'lino_xl.lib.cal.models.Event.assigned_to' : _("""Another user who is expected to take responsibility for this
event."""),
    'lino_xl.lib.cal.models.Event.event_type' : _("""The type of this event. Every calendar event should have this
field pointing to a given EventType, which holds
extended configurable information about this event."""),
    'lino_xl.lib.cal.models.Event.state' : _("""The state of this entry. The state can change according to
rules defined by the workflow, that's why we sometimes refer
to it as the life cycle."""),
    'lino_xl.lib.cal.models.Event.when_html' : _("""Shows the date and time of the event with a link that opens
all events on that day (EventsByDay)."""),
    'lino_xl.lib.cal.models.Event.show_conflicting' : _("""A ShowSlaveTable
button which opens the ConflictingEvents table for this event."""),
    'lino_xl.lib.cal.models.EventGuestChecker' : _("""Check for calendar entries without participants."""),
    'lino_xl.lib.cal.models.ConflictingEventsChecker' : _("""Check whether this event conflicts with other events."""),
    'lino_xl.lib.cal.models.ObsoleteEventTypeChecker' : _("""Check whether the type of this event should be updated."""),
    'lino_xl.lib.cal.models.LongEventChecker' : _("""Check for events which last longer than the maximum number of days
allowed by their type."""),
    'lino_xl.lib.cal.models.LongEventChecker.model' : _("""alias of Event"""),
    'lino_xl.lib.cal.models.Guest' : _("""Represents the fact that a given person is expected to attend to a
given event."""),
    'lino_xl.lib.cal.models.Guest.event' : _("""The calendar event to which this presence applies."""),
    'lino_xl.lib.cal.models.Guest.partner' : _("""The partner to which this presence applies."""),
    'lino_xl.lib.cal.models.Guest.role' : _("""The role of this partner in this presence."""),
    'lino_xl.lib.cal.models.Guest.state' : _("""The state of this presence."""),
    'lino_xl.lib.cal.ui.TasksByUser' : _("""Shows the list of tasks for this user."""),
    'lino_xl.lib.cal.ui.TasksByUser.master' : _("""alias of User"""),
    'lino_xl.lib.cal.ui.TasksByUser.model' : _("""alias of Task"""),
    'lino_xl.lib.cal.ui.MyTasks' : _("""All my tasks.  Only those whose start_date is today or in the
future."""),
    'lino_xl.lib.cal.ui.MyTasks.default_end_date_offset' : _("""Number of days to go into the future. The default value for
end_date will be today + that number of days."""),
    'lino_xl.lib.cal.ui.MyTasks.model' : _("""alias of Task"""),
    'lino_xl.lib.cal.ui.Guests' : _("""The default table for Guest."""),
    'lino_xl.lib.cal.ui.Guests.model' : _("""alias of Guest"""),
    'lino_xl.lib.cal.ui.MyPresences' : _("""Shows all my presences in calendar events, independently of their
state."""),
    'lino_xl.lib.cal.ui.MyPresences.model' : _("""alias of Guest"""),
    'lino_xl.lib.cal.ui.RecurrentEvents' : _("""The list of all recurrent events (RecurrentEvent)."""),
    'lino_xl.lib.cal.ui.RecurrentEvents.model' : _("""alias of RecurrentEvent"""),
    'lino_xl.lib.cal.ui.Events' : _("""Table which shows all calendar events."""),
    'lino_xl.lib.cal.ui.Events.show_appointments' : _("""Whether only appointments should be
shown.  "Yes" means only appointments, "No"
means no appointments and leaving it to blank shows both types
of events."""),
    'lino_xl.lib.cal.ui.Events.model' : _("""alias of Event"""),
    'lino_xl.lib.cal.ui.ConflictingEvents' : _("""Shows events conflicting with this one (the master)."""),
    'lino_xl.lib.cal.ui.ConflictingEvents.master' : _("""alias of Event"""),
    'lino_xl.lib.cal.ui.ConflictingEvents.model' : _("""alias of Event"""),
    'lino_xl.lib.cal.ui.EventsByDay' : _("""This table is usually labelled "Appointments today". It has no
"date" column because it shows events of a given date."""),
    'lino_xl.lib.cal.ui.EventsByDay.model' : _("""alias of Event"""),
    'lino_xl.lib.cal.ui.EventsByRoom' : _("""Displays the Events at a given Room."""),
    'lino_xl.lib.cal.ui.EventsByRoom.master' : _("""alias of Room"""),
    'lino_xl.lib.cal.ui.EventsByRoom.model' : _("""alias of Event"""),
    'lino_xl.lib.cal.ui.EventsByController' : _("""Shows the events linked to this database object."""),
    'lino_xl.lib.cal.ui.EventsByController.model' : _("""alias of Event"""),
    'lino_xl.lib.cal.ui.OneEvent' : _("""Show a single calendar event."""),
    'lino_xl.lib.cal.ui.OneEvent.model' : _("""alias of Event"""),
    'lino_xl.lib.cal.ui.MyEvents' : _("""Table which shows today's and all future appointments of the
requesting user.  The default filter parameters are set to show
only appointments."""),
    'lino_xl.lib.cal.ui.MyEvents.model' : _("""alias of Event"""),
    'lino_xl.lib.cal.ui.MyEventsToday' : _("""Like MyEvents, but only today."""),
    'lino_xl.lib.cal.ui.MyEventsToday.model' : _("""alias of Event"""),
    'lino_xl.lib.cal.ui.MyAssignedEvents' : _("""The table of events which are assigned to me. That is, whose
Event.assigned_to field refers to the requesting user."""),
    'lino_xl.lib.cal.ui.MyAssignedEvents.model' : _("""alias of Event"""),
    'lino_xl.lib.cal.ui.OverdueAppointments' : _("""Shows overdue appointments, i.e. appointments whose date is
over but who are still in a nonstable state."""),
    'lino_xl.lib.cal.ui.OverdueAppointments.model' : _("""alias of Event"""),
    'lino_xl.lib.cal.ui.MyOverdueAppointments' : _("""Like OverdueAppointments, but only for myself."""),
    'lino_xl.lib.cal.ui.MyOverdueAppointments.model' : _("""alias of Event"""),
    'lino_xl.lib.cal.ui.MyUnconfirmedAppointments' : _("""Shows appointments in the near future which are still in draft
state."""),
    'lino_xl.lib.cal.ui.MyUnconfirmedAppointments.model' : _("""alias of Event"""),
    'lino_xl.lib.cal.workflows.TaskStates' : _("""Possible values for the state of a Task. The list of
choices for the Task.state field. By default it contains
the following values (which can be redefined in
lino.core.site.Site.setup_choicelists()):"""),
    'lino_xl.lib.cal.workflows.EventStates' : _("""The list of choices for the state field of a calendar entry."""),
    'lino_xl.lib.cal.workflows.GuestStates' : _("""Possible values for the state of a Guest. The list of choices for
the Guest.state field."""),
    'lino_xl.lib.cal.workflows.feedback.InvitationFeedback' : _("""Base class for actions that give feedback to an invitation."""),
    'lino_xl.lib.cal.workflows.feedback.AcceptInvitation' : _("""Accept this invitation."""),
    'lino_xl.lib.cal.workflows.feedback.MarkPresent' : _("""Mark this participant as present at the event."""),
    'lino_xl.lib.cal.workflows.feedback.MarkAbsent' : _("""Mark this participant as absent (without explanation)."""),
    'lino_xl.lib.cal.workflows.feedback.MarkExcused' : _("""Mark this participant as absent (with acceptable explanation)."""),
    'lino_xl.lib.cal.workflows.feedback.PublishEvent' : _("""Mark this event as published.  All participants have been informed."""),
    'lino_xl.lib.cal.workflows.feedback.CloseMeeting' : _("""The meeting is over and the guests go home."""),
    'lino_xl.lib.coachings.Plugin' : _("""See lino.core.plugin.Plugin."""),
    'lino_xl.lib.coachings.choicelists.ClientEvents' : _("""A choicelist of observable client events."""),
    'lino_xl.lib.coachings.choicelists.ClientCreated' : _("""The choice for ClientEvents which
selects clients whose record has been created during the observed
period."""),
    'lino_xl.lib.coachings.choicelists.ClientModified' : _("""The choice for ClientEvents which selects clients whose
main record has been modified during the observed period."""),
    'lino_xl.lib.coachings.desktop.CoachingsByClient' : _("""The Coachings table in a Clients detail."""),
    'lino_xl.lib.coachings.mixins.Coachable' : _("""Base class for coachable client."""),
    'lino_xl.lib.coachings.mixins.ClientContactBase' : _("""Also used by aids.RefundPartner."""),
    'lino_xl.lib.coachings.models.CoachingType' : _("""Whether coachings of this type are to be considered as
integration work. This is used when generating calendar events
for evaluation meetings (see
lino_welfare.modlib.isip.mixins.ContractBase.setup_auto_event())"""),
    'lino_xl.lib.coachings.models.Coaching' : _("""A Coaching ("Begleitung" in German and "intervention" in French) is
when a given client is being coached by a given user during a
given period."""),
    'lino_xl.lib.coachings.models.ClientCoachingsChecker' : _("""Coached clients should not be obsolete.  Only coached clients
should have active coachings"""),
    'lino_xl.lib.coachings.models.ClientContactType' : _("""A client contact type is the type or "role" which must be
specified for a given ClientContact."""),
    'lino_xl.lib.coachings.models.ClientContact' : _("""A client contact is when a given partner has a given role for
a given client."""),
    'lino_xl.lib.coachings.roles.CoachingsUser' : _("""A user who has access to basic coachings functionality."""),
    'lino_xl.lib.coachings.roles.CoachingsStaff' : _("""A user who can configure coaching functionality."""),
    'lino_xl.lib.concepts.Plugin' : _("""See /dev/plugins."""),
    'lino_xl.lib.contacts.Plugin' : _("""See lino.core.plugin.Plugin."""),
    'lino_xl.lib.contacts.choicelists.PartnerEvents' : _("""A choicelist of observable partner events."""),
    'lino_xl.lib.contacts.mixins.ContactRelated' : _("""Model mixin for things that relate to either a private person
or a company, the latter potentially represented by a contact
person having a given role in that company.  Typical usages are
invoices or contracts."""),
    'lino_xl.lib.contacts.mixins.ContactRelated.company' : _("""Pointer to lino_xl.lib.contacts.models.Company."""),
    'lino_xl.lib.contacts.mixins.ContactRelated.contact_person' : _("""Pointer to lino_xl.lib.contacts.models.Person."""),
    'lino_xl.lib.contacts.mixins.ContactRelated.contact_role' : _("""The optional Role
of the contact_person within company."""),
    'lino_xl.lib.contacts.mixins.ContactRelated.partner' : _("""(Virtual field) The "legal partner", i.e. usually the
company, except when that field is empty, in which
case partner contains the contact_person.  If both
fields are empty, then partner contains None."""),
    'lino_xl.lib.contacts.mixins.ContactRelated.recipient' : _("""(Virtual field) The Addressable object to use when
printing a postal address for this.
This is typically either the company or
contact_person (if one of these fields is
non-empty). It may also be a
lino_xl.lib.contacts.models.Role object."""),
    'lino_xl.lib.contacts.mixins.PartnerDocument' : _("""Adds two fields 'partner' and 'person' to this model, making it
something that refers to a "partner".  person means a "contact
person" for the partner."""),
    'lino_xl.lib.contacts.mixins.OldCompanyContact' : _("""Abstract class which adds two fields company and contact."""),
    'lino_xl.lib.contacts.models.Partner' : _("""A Partner is any physical or moral person for which you want to
keep contact data (address, phone numbers, ...)."""),
    'lino_xl.lib.contacts.models.Partner.name' : _("""The full name of this partner. Used for alphabetic sorting.
Subclasses may hide this field and fill it automatically,
e.g. saving a Person will automatically set her
name field to "last_name, first_name"."""),
    'lino_xl.lib.contacts.models.Partner.email' : _("""The primary email address."""),
    'lino_xl.lib.contacts.models.Partner.phone' : _("""The primary phone number.  Note that Lino does not ignore
formatting characters in phone numbers when searching.  For
example, if you enter "087/12.34.56" as a phone number, then a
search for phone number containing "1234" will not find it."""),
    'lino_xl.lib.contacts.models.Partner.gsm' : _("""The primary mobile phone number."""),
    'lino_xl.lib.contacts.models.Partner.language' : _("""The language to use when communicating with this partner."""),
    'lino_xl.lib.contacts.models.Partner.full_name' : _("""Return a one-line string representing this Partner.  The default
returns simply the name field, ignoring any parameters, but
e.g. Human overrides this."""),
    'lino_xl.lib.contacts.models.Person' : _("""A physical person and an individual human being.
See also lino.tutorial.human."""),
    'lino_xl.lib.contacts.models.Persons' : _("""List of all Persons."""),
    'lino_xl.lib.contacts.models.Persons.model' : _("""alias of Person"""),
    'lino_xl.lib.contacts.models.CompanyType' : _("""A type of organization. Used by Company.type field."""),
    'lino_xl.lib.contacts.models.Company.type' : _("""Pointer to the CompanyType."""),
    'lino_xl.lib.contacts.models.Company.full_name' : _("""Deserves more documentation."""),
    'lino_xl.lib.contacts.models.RoleType' : _("""A RoleType is "what a given Person can be for a
given Company"."""),
    'lino_xl.lib.contacts.models.Role' : _("""A Contact (historical model name Role) is a
Person who has a given role (ContactType) in a
given Company."""),
    'lino_xl.lib.contacts.models.Role.company' : _("""The company where this person has a role."""),
    'lino_xl.lib.contacts.models.Role.type' : _("""The role of this person in this company."""),
    'lino_xl.lib.contacts.models.Role.person' : _("""The person having this role in this company."""),
    'lino_xl.lib.contacts.models.RolesByPerson' : _("""Shows all roles of a person."""),
    'lino_xl.lib.contacts.models.RolesByPerson.master' : _("""alias of Person"""),
    'lino_xl.lib.contacts.models.RolesByPerson.model' : _("""alias of Role"""),
    'lino_xl.lib.contacts.models.Organisation' : _("""alias of Company"""),
    'lino_xl.lib.contacts.roles.SimpleContactsUser' : _("""A user who has access to basic contacts functionality."""),
    'lino_xl.lib.contacts.roles.ContactsUser' : _("""A user who has access to full contacts functionality."""),
    'lino_xl.lib.contacts.roles.ContactsStaff' : _("""A user who can configure contacts functionality."""),
    'lino_xl.lib.countries.Plugin' : _("""See /dev/plugins."""),
    'lino_xl.lib.countries.Plugin.hide_region' : _("""Whether to hide the region field in postal addresses.  Set this
to True if you live in a country like Belgium.  Belgium is
--despite their constant language disputes-- obviously a very
united country since they don't need a region field when
entering a postal address.  In Belgium, when you write a letter,
you just say the zip code and name of the city.  In many other
countries there is a mandatory intermediate field."""),
    'lino_xl.lib.countries.Plugin.country_code' : _("""The 2-letter ISO code of the country where the site owner is
located.  This may not be empty, and there must be a country with
that ISO code in lino_xl.lib.countries.models.Country."""),
    'lino_xl.lib.countries.choicelists.PlaceTypes' : _("""A choicelist of possible place types."""),
    'lino_xl.lib.countries.mixins.CountryCity' : _("""Model mixin that adds two fields country and city and defines
a context-sensitive chooser for city, a create_city_choice
method, ..."""),
    'lino_xl.lib.countries.mixins.CountryCity.city' : _("""A pointer to Place."""),
    'lino_xl.lib.countries.mixins.CountryRegionCity' : _("""Adds a region field to a CountryCity."""),
    'lino_xl.lib.countries.mixins.AddressLocation' : _("""A mixin for models which contain a postal address location."""),
    'lino_xl.lib.countries.mixins.AddressLocation.addess_column' : _("""Virtual field which returns the location as a comma-separated
one-line string."""),
    'lino_xl.lib.countries.models.Country' : _("""A "country" or "nation"."""),
    'lino_xl.lib.countries.models.Countries' : _("""The table of all countries."""),
    'lino_xl.lib.countries.models.Countries.model' : _("""alias of Country"""),
    'lino_xl.lib.countries.models.Place' : _("""Any kind of named geographic region (except those who have an entry
in Country."""),
    'lino_xl.lib.countries.models.PlaceChecker' : _("""The name of a geographical place
(lino_xl.lib.countries.models.Place.name) should not
consist of only digits."""),
    'lino_xl.lib.countries.utils.AddressFormatter' : _("""Format used in BE, DE, FR, NL..."""),
    'lino_xl.lib.countries.utils.EstonianAddressFormatter' : _("""Format used in Estonia."""),
    'lino_xl.lib.courses.Plugin' : _("""See lino.core.plugin.Plugin."""),
    'lino_xl.lib.courses.choicelists.EnrolmentStates' : _("""The list of possible states of an enrolment."""),
    'lino_xl.lib.courses.desktop.CourseDetail' : _("""The detail layout of a Course."""),
    'lino_xl.lib.courses.desktop.Activities' : _("""Base table for all activities."""),
    'lino_xl.lib.courses.desktop.Activities.model' : _("""alias of Course"""),
    'lino_xl.lib.courses.desktop.MyCoursesGiven' : _("""Show the courses given by me (i.e. where I am the teacher)."""),
    'lino_xl.lib.courses.desktop.MyCoursesGiven.master' : _("""alias of Person"""),
    'lino_xl.lib.courses.desktop.MyCoursesGiven.model' : _("""alias of Course"""),
    'lino_xl.lib.courses.desktop.CoursesByLine' : _("""Show the courses per course line."""),
    'lino_xl.lib.courses.desktop.CoursesByLine.master' : _("""alias of Line"""),
    'lino_xl.lib.courses.desktop.CoursesByLine.model' : _("""alias of Course"""),
    'lino_xl.lib.courses.desktop.CoursesByTopic' : _("""Shows the courses of a given topic."""),
    'lino_xl.lib.courses.desktop.CoursesByTopic.master' : _("""alias of Topic"""),
    'lino_xl.lib.courses.desktop.CoursesByTopic.model' : _("""alias of Course"""),
    'lino_xl.lib.courses.desktop.Enrolments' : _("""Base class for all enrolment tables."""),
    'lino_xl.lib.courses.desktop.Enrolments.model' : _("""alias of Enrolment"""),
    'lino_xl.lib.courses.desktop.AllEnrolments' : _("""Show global list of all enrolments."""),
    'lino_xl.lib.courses.desktop.AllEnrolments.model' : _("""alias of Enrolment"""),
    'lino_xl.lib.courses.desktop.PendingRequestedEnrolments' : _("""Show all requested enrolments."""),
    'lino_xl.lib.courses.desktop.PendingRequestedEnrolments.model' : _("""alias of Enrolment"""),
    'lino_xl.lib.courses.desktop.PendingConfirmedEnrolments' : _("""Show all confirmed enrolments."""),
    'lino_xl.lib.courses.desktop.PendingConfirmedEnrolments.model' : _("""alias of Enrolment"""),
    'lino_xl.lib.courses.desktop.EnrolmentsByPupil' : _("""Show all enrolments of a given pupil."""),
    'lino_xl.lib.courses.desktop.EnrolmentsByPupil.master' : _("""alias of Person"""),
    'lino_xl.lib.courses.desktop.EnrolmentsByPupil.model' : _("""alias of Enrolment"""),
    'lino_xl.lib.courses.models.Line' : _("""An activity line (or series) groups courses into a
configurable list of categories."""),
    'lino_xl.lib.courses.models.Line.name' : _("""The designation of this activity line as seen by the user
e.g. when selecting the line."""),
    'lino_xl.lib.courses.models.Line.excerpt_title' : _("""The text to print as title in enrolments."""),
    'lino_xl.lib.courses.models.Line.body_template' : _("""The body template to use when printing an activity of this
line.  Leave empty to use the site's default (defined by
body_template on the
lino_xl.lib.excerpts.models.ExcerptType for
Course)"""),
    'lino_xl.lib.courses.models.Line.course_area' : _("""Pointer to CourseAreas.  This is used only when an
application defines several variants of
EnrolmentsByPupil."""),
    'lino_xl.lib.courses.models.Course' : _("""A Course is a group of pupils that regularily meet with a given
teacher in a given room to speak about a given subject."""),
    'lino_xl.lib.courses.models.Course.max_places' : _("""Available places. The maximum number of participants to allow
in this course."""),
    'lino_xl.lib.courses.models.Course.free_places' : _("""Number of free places."""),
    'lino_xl.lib.courses.models.Course.requested' : _("""Number of requested places."""),
    'lino_xl.lib.courses.models.Course.confirmed' : _("""Number of confirmed places."""),
    'lino_xl.lib.courses.models.Enrolment' : _("""An enrolment is when a given pupil plans to participate in a
given course."""),
    'lino_xl.lib.courses.models.Enrolment.state' : _("""One of lino_xl.lib.courses.choicelists.EnrolmentStates."""),
    'lino_xl.lib.courses.models.Enrolment.pupil_info' : _("""Virtual HtmlBox field showing the name and address of the
participant."""),
    'lino_xl.lib.courses.workflows.ConfirmEnrolment' : _("""Confirm this enrolment. Sets the state to confirmed after
calling get_confirm_veto to
verify whether it is valid (e.g. whether there are enough free
places)."""),
    'lino_xl.lib.cv.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.dupable_partners.Plugin' : _("""See lino.core.plugin.Plugin."""),
    'lino_xl.lib.events.Plugin' : _("""See /dev/plugins."""),
    'lino_xl.lib.excerpts.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.excerpts.Plugin.responsible_user' : _("""The username of the user responsible for monitoring the excerpts
system. This is currently used only by
lino_xl.lib.excerpts.fixtures.demo2."""),
    'lino_xl.lib.excerpts.choicelists.Shortcuts' : _("""The list of excerpt shortcut fields.  An excerpt shortcut field is
a virtual display field with actions for quickly managing, from a
given database object, the excerpt for this object of a given type."""),
    'lino_xl.lib.excerpts.mixins.ClearPrinted' : _("""Action to clear the print cache (i.e. the generated printable
document)."""),
    'lino_xl.lib.excerpts.mixins.Certifiable' : _("""Any model which inherits from this mixin becomes "certifiable".
That is:"""),
    'lino_xl.lib.excerpts.mixins.Certifiable.printed' : _("""Displays information about when this certifiable has been printed.
Clicking on it will display the excerpt pointed to by
printed_by."""),
    'lino_xl.lib.excerpts.mixins.Certifiable.printed_by' : _("""ForeignKey to the Excerpt which certifies this instance."""),
    'lino_xl.lib.excerpts.mixins.ExcerptTitle' : _("""Mixin for models like
lino_welfare.modlib.aids.models.AidType and
lino_xl.lib.courses.models.Line."""),
    'lino_xl.lib.excerpts.mixins.ExcerptTitle.name' : _("""The designation of this row as seen by the user e.g. when
selecting an instance of this model."""),
    'lino_xl.lib.excerpts.mixins.ExcerptTitle.excerpt_title' : _("""The text to print as title in confirmations.
One field for every language.
If this is empty, then name is used."""),
    'lino_xl.lib.excerpts.models.ExcerptType' : _("""The type of an excerpt. Every excerpt has a mandatory field
Excerpt.excerpt_type which points to an ExcerptType
instance."""),
    'lino_xl.lib.excerpts.models.ExcerptType.name' : _("""The designation of this excerpt type.
One field for every language."""),
    'lino_xl.lib.excerpts.models.ExcerptType.content_type' : _("""The database model for which this excerpt type is to be used."""),
    'lino_xl.lib.excerpts.models.ExcerptType.build_method' : _("""See lino.modlib.printing.mixins.PrintableType.build_method."""),
    'lino_xl.lib.excerpts.models.ExcerptType.template' : _("""The main template to be used when printing an excerpt of this type."""),
    'lino_xl.lib.excerpts.models.ExcerptType.body_template' : _("""The body template to use when printing an excerpt of this type."""),
    'lino_xl.lib.excerpts.models.ExcerptType.email_template' : _("""The template to use when sending this an excerpt of this type
by email."""),
    'lino_xl.lib.excerpts.models.ExcerptType.shortcut' : _("""Optional pointer to a shortcut field.  If this is not empty, then
the given shortcut field will manage excerpts of this type."""),
    'lino_xl.lib.excerpts.models.ExcerptTypes' : _("""Displays all rows of ExcerptType."""),
    'lino_xl.lib.excerpts.models.ExcerptTypes.model' : _("""alias of ExcerptType"""),
    'lino_xl.lib.excerpts.models.CreateExcerpt' : _("""Action to create an excerpt in order to print this data record."""),
    'lino_xl.lib.excerpts.models.Excerpt' : _("""A printable document that describes some aspect of the current
situation."""),
    'lino_xl.lib.excerpts.models.Excerpt.excerpt_type' : _("""The type of this excerpt (ForeignKey to ExcerptType)."""),
    'lino_xl.lib.excerpts.models.Excerpt.owner' : _("""The object being printed by this excerpt.
See Controllable.owner."""),
    'lino_xl.lib.excerpts.models.Excerpt.company' : _("""The optional company of the recipient of this
excerpt.  See ContactRelated.company."""),
    'lino_xl.lib.excerpts.models.Excerpt.contact_person' : _("""The optional contact person of the recipient of this
excerpt.  See ContactRelated.contact_person."""),
    'lino_xl.lib.excerpts.models.Excerpt.recipient' : _("""The recipient of this excerpt.  See
ContactRelated.recipient"""),
    'lino_xl.lib.excerpts.models.Excerpt.language' : _("""The language used for printing this excerpt."""),
    'lino_xl.lib.excerpts.models.Excerpts' : _("""Base class for all tables on Excerpt."""),
    'lino_xl.lib.excerpts.models.Excerpts.model' : _("""alias of Excerpt"""),
    'lino_xl.lib.excerpts.models.ExcerptsByOwner' : _("""Shows all excerpts whose owner field is
this."""),
    'lino_xl.lib.excerpts.models.ExcerptsByOwner.model' : _("""alias of Excerpt"""),
    'lino_xl.lib.extensible.Plugin' : _("""Extends lino.core.plugin.Plugin."""),
    'lino_xl.lib.extensible.Plugin.calendar_start_hour' : _("""The time at which the CalendarPanel's daily view starts."""),
    'lino_xl.lib.extensible.Plugin.calendar_end_hour' : _("""The time at which the CalendarPanel's daily view ends."""),
    'lino_xl.lib.families.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.families.models.CoupleField' : _("""An editable virtual field that looks like a FK to a contacts.Person
but is stored as a Couple instance."""),
    'lino_xl.lib.finan.Plugin' : _("""This Plugin class adds some
entries to the Explorer menu.  It contains the following
additional attributes:"""),
    'lino_xl.lib.finan.Plugin.suggest_future_vouchers' : _("""Whether to suggest vouchers whose due_date is in the future."""),
    'lino_xl.lib.finan.mixins.FinancialVoucher' : _("""Base class for all financial vouchers:
Grouper,
JournalEntry,
PaymentOrder and
BankStatement."""),
    'lino_xl.lib.finan.mixins.FinancialVoucher.item_account' : _("""The default value to use when
FinancialVoucherItem.account of an item is empty."""),
    'lino_xl.lib.finan.mixins.FinancialVoucher.item_remark' : _("""The default value to use when
FinancialVoucherItem.remark of an item is empty."""),
    'lino_xl.lib.finan.mixins.FinancialVoucherItem' : _("""The base class for the items of all types of financial vouchers
(FinancialVoucher)."""),
    'lino_xl.lib.finan.mixins.FinancialVoucherItem.account' : _("""The general account to be used in the primary booking.
If this is empty, use item_account of the voucher."""),
    'lino_xl.lib.finan.mixins.FinancialVoucherItem.project' : _("""The client related to this transaction."""),
    'lino_xl.lib.finan.mixins.FinancialVoucherItem.partner' : _("""The partner account to be used in the primary booking."""),
    'lino_xl.lib.finan.mixins.FinancialVoucherItem.amount' : _("""The amount to be booked. If this is empty, then the voucher
cannot be registered."""),
    'lino_xl.lib.finan.mixins.FinancialVoucherItem.dc' : _("""The direction of the primary booking to create."""),
    'lino_xl.lib.finan.mixins.FinancialVoucherItem.remark' : _("""External reference. The description of this transation
as seen by the external partner."""),
    'lino_xl.lib.finan.mixins.FinancialVoucherItem.match' : _("""An arbitrary string used to group several movements."""),
    'lino_xl.lib.finan.mixins.DatedFinancialVoucher' : _("""A FinancialVoucher whose items have a date field."""),
    'lino_xl.lib.finan.mixins.DatedFinancialVoucherItem' : _("""A FinancialVoucherItem with an additional date
field."""),
    'lino_xl.lib.finan.mixins.DatedFinancialVoucherItem.date' : _("""The value date of this item."""),
    'lino_xl.lib.finan.models.JournalEntry' : _("""This is the model for "journal entries" ("operations diverses")."""),
    'lino_xl.lib.finan.models.PaymentOrder' : _("""A payment order is when a user instructs a bank to execute a
series of outgoing transactions from a given bank account."""),
    'lino_xl.lib.finan.models.BankStatement' : _("""A bank statement is a document issued by the bank, which
reports all transactions which occured on a given account during a
given period."""),
    'lino_xl.lib.finan.models.BankStatement.balance1' : _("""The old (or start) balance."""),
    'lino_xl.lib.finan.models.BankStatement.balance2' : _("""The new (or end) balance."""),
    'lino_xl.lib.finan.models.JournalEntryItem' : _("""An item of a JournalEntry."""),
    'lino_xl.lib.finan.models.BankStatementItem' : _("""An item of a BankStatement."""),
    'lino_xl.lib.finan.models.PaymentOrderItem' : _("""An item of a PaymentOrder."""),
    'lino_xl.lib.finan.models.FinancialVouchers' : _("""Base class for the default tables of all other financial voucher
types (JournalEntries , PaymentOrders and
BankStatemens)."""),
    'lino_xl.lib.finan.models.PaymentOrders' : _("""The table of all PaymentOrder vouchers."""),
    'lino_xl.lib.finan.models.BankStatements' : _("""The table of all BankStatement vouchers."""),
    'lino_xl.lib.finan.models.FillSuggestionsToVoucher' : _("""Fill selected suggestions from a SuggestionsByVoucher table into a
financial voucher."""),
    'lino_xl.lib.finan.models.FillSuggestionsToVoucherItem' : _("""Fill the selected suggestions as items to the voucher. The first
selected suggestion does not create a new item but replaces the
item for which it was called."""),
    'lino_xl.lib.finan.models.SuggestionsByVoucher' : _("""Shows the suggested items for a given voucher, with a button to
fill them into the current voucher."""),
    'lino_xl.lib.finan.models.SuggestionsByJournalEntry' : _("""A SuggestionsByVoucher table for a JournalEntry."""),
    'lino_xl.lib.finan.models.SuggestionsByPaymentOrder' : _("""A SuggestionsByVoucher table for a PaymentOrder."""),
    'lino_xl.lib.finan.models.SuggestionsByBankStatement' : _("""A SuggestionsByVoucher table for a BankStatement."""),
    'lino_xl.lib.finan.models.SuggestionsByVoucherItem' : _("""Displays the payment suggestions for a voucher item, with a button
to fill them into the current item (creating additional items if
more than one suggestion was selected)."""),
    'lino_xl.lib.finan.models.SuggestionsByBankStatementItem' : _("""A SuggestionsByVoucherItem table for a
BankStatementItem."""),
    'lino_xl.lib.finan.models.SuggestionsByPaymentOrderItem' : _("""A SuggestionsByVoucherItem table for a
PaymentOrderItem."""),
    'lino_xl.lib.households.Plugin' : _("""Extends lino.core.plugin.Plugin."""),
    'lino_xl.lib.households.Plugin.person_model' : _("""A string referring to the model which represents a human in your
application.  Default value is 'contacts.Person' (referring to
lino_xl.lib.contacts.models.Person)."""),
    'lino_xl.lib.households.Plugin.adult_age' : _("""The age (in years) a person needs to have in order to be considered
adult."""),
    'lino_xl.lib.households.choicelists.MemberDependencies' : _("""The list of allowed choices for the charge of a household member."""),
    'lino_xl.lib.households.choicelists.MemberRoles' : _("""The list of allowed choices for the (role of a household member."""),
    'lino_xl.lib.households.models.Type' : _("""Type of a household.
http://www.belgium.be/fr/famille/couple/cohabitation/"""),
    'lino_xl.lib.households.models.Household' : _("""A Household is a Partner who represents several Persons living together.
A Household has a list of members."""),
    'lino_xl.lib.households.models.Household.full_name' : _("""Overrides
lino_xl.lib.contacts.models.Partner.get_full_name()."""),
    'lino_xl.lib.households.models.Member' : _("""A household membership represents the fact that a given person
is (or has been) part of a given household."""),
    'lino_xl.lib.households.models.Member.start_date' : _("""Since when this membership exists. This is usually empty."""),
    'lino_xl.lib.households.models.Member.end_date' : _("""Until when this membership exists."""),
    'lino_xl.lib.households.models.SiblingsByPerson' : _("""Displays the siblings of a given person in that person's active
household."""),
    'lino_xl.lib.households.models.SiblingsByPerson.master' : _("""alias of Person"""),
    'lino_xl.lib.households.models.SiblingsByPerson.model' : _("""alias of Member"""),
    'lino_xl.lib.humanlinks.Plugin' : _("""Extends lino.core.plugin.Plugin."""),
    'lino_xl.lib.humanlinks.Plugin.person_model' : _("""A string referring to the model which represents a human in your
application.  Default value is 'contacts.Person' (referring to
lino_xl.lib.contacts.Person)."""),
    'lino_xl.lib.humanlinks.choicelists.LinkTypes' : _("""The global list of human link types.  This is used as choicelist
for the type
field of a human link."""),
    'lino_xl.lib.humanlinks.choicelists.LinkTypes.adoptive_parent' : _("""A person who adopts a child of other parents as his or her own child."""),
    'lino_xl.lib.humanlinks.choicelists.LinkTypes.stepparent' : _("""Someone that your mother or father marries after the marriage
to or relationship with your other parent has ended"""),
    'lino_xl.lib.humanlinks.choicelists.LinkTypes.foster_parent' : _("""A man (woman) who looks after or brings up a child or children
as a father (mother), in place of the natural or adoptive
father (mother). [thefreedictionary]"""),
    'lino_xl.lib.humanlinks.models.Link' : _("""A link between two persons."""),
    'lino_xl.lib.humanlinks.models.Link.parent' : _("""Pointer to the person who is "parent"."""),
    'lino_xl.lib.humanlinks.models.Link.child' : _("""Pointer to the person who is "child"."""),
    'lino_xl.lib.humanlinks.models.Link.type' : _("""The type of link.  Pointer to LinkTypes."""),
    'lino_xl.lib.humanlinks.models.LinksByHuman' : _("""Show all links for which this human is either parent or child."""),
    'lino_xl.lib.humanlinks.models.LinksByHuman.master' : _("""alias of Person"""),
    'lino_xl.lib.humanlinks.models.LinksByHuman.model' : _("""alias of Link"""),
    'lino_xl.lib.invoicing.Plugin.item_model' : _("""The database model into which invoiceable objects should create
invoice items.  Default value refers to
sales.InvoiceItem."""),
    'lino_xl.lib.invoicing.actions.StartInvoicing' : _("""Base for StartInvoicingForJournal,
StartInvoicingForPartner."""),
    'lino_xl.lib.invoicing.actions.StartInvoicingForJournal' : _("""Start an invoicing plan for this journal."""),
    'lino_xl.lib.invoicing.actions.StartInvoicingForPartner' : _("""Start an invoicing plan for this partner."""),
    'lino_xl.lib.invoicing.actions.ToggleSelection' : _("""Invert selection status for all suggestions."""),
    'lino_xl.lib.invoicing.mixins.Invoiceable' : _("""Mixin for things that are "invoiceable", i.e. for which a customer
is going to receive an invoice."""),
    'lino_xl.lib.invoicing.mixins.Invoiceable.invoicings' : _("""A simple GenericRelation
to all invoice items pointing to this enrolment."""),
    'lino_xl.lib.invoicing.mixins.Invoiceable.invoiceable_date_field' : _("""The name of the field which holds the invoiceable date.  Must be
set by subclasses."""),
    'lino_xl.lib.invoicing.models.Plan' : _("""An invoicing plan is a rather temporary database object which
represents the plan of a given user to have Lino generate a series
of invoices."""),
    'lino_xl.lib.invoicing.models.Plan.journal' : _("""The journal where to create invoices.  When this field is
empty, you can fill the plan with suggestions but cannot
execute the plan."""),
    'lino_xl.lib.invoicing.models.Plan.execute_plan' : _("""Execute this plan, i.e. create an invoice for each selected
suggestion."""),
    'lino_xl.lib.invoicing.models.Item' : _("""The items of an invoicing plan are called suggestions."""),
    'lino_xl.lib.invoicing.models.Item.preview' : _("""A textual preview of the invoiceable items to be included in
the invoice."""),
    'lino_xl.lib.invoicing.models.Item.invoice' : _("""The invoice that has been generated. This field is empty for
new items. When an item has been executed, this field points
to the generated invoice."""),
    'lino_xl.lib.ledger.Plugin' : _("""See lino.core.plugin.Plugin."""),
    'lino_xl.lib.ledger.Plugin.use_pcmn' : _("""Whether to use the PCMN notation."""),
    'lino_xl.lib.ledger.Plugin.project_model' : _("""Leave this to None for normal behaviour.  Set this to a string of
the form '<app_label>.<ModelName>' if you want to add an
additional field project to all models which inherit from
lino_xl.lib.ledger.mixins.ProjectRelated."""),
    'lino_xl.lib.ledger.Plugin.intrusive_menu' : _("""Whether the plugin should integrate into the application's main
menu in an intrusive way.  Intrusive means that the main menu gets
one top-level item per journal group."""),
    'lino_xl.lib.ledger.Plugin.start_year' : _("""An integer with the calendar year in which this site starts working."""),
    'lino_xl.lib.ledger.Plugin.fix_y2k' : _("""Whether to use a Y2K compatible representation for fiscal years."""),
    'lino_xl.lib.ledger.Plugin.force_cleared_until' : _("""Force all movements on vouchers with entry_date until the given
date to be cleared.  This is useful e.g. when you want to keep
legacy invoices in your database but not their payments."""),
    'lino_xl.lib.ledger.choicelists.JournalGroups' : _("""The list of possible journal groups."""),
    'lino_xl.lib.ledger.choicelists.JournalGroups.sales' : _("""For sales journals."""),
    'lino_xl.lib.ledger.choicelists.JournalGroups.purchases' : _("""For purchases journals."""),
    'lino_xl.lib.ledger.choicelists.JournalGroups.wages' : _("""For wages journals."""),
    'lino_xl.lib.ledger.choicelists.JournalGroups.financial' : _("""For financial journals (bank statements and cash reports)"""),
    'lino_xl.lib.ledger.choicelists.FiscalYears' : _("""A list of the fiscal years available in this database."""),
    'lino_xl.lib.ledger.choicelists.PeriodStates' : _("""The list of possible states of an accounting period."""),
    'lino_xl.lib.ledger.choicelists.VoucherType' : _("""Base class for all items of VoucherTypes."""),
    'lino_xl.lib.ledger.choicelists.VoucherType.model' : _("""The database model used to store vouchers of this type.
A subclass of lino_xl.lib.ledger.models.Voucher`."""),
    'lino_xl.lib.ledger.choicelists.VoucherType.table_class' : _("""Must be a table on model and with master_key set to
the
journal."""),
    'lino_xl.lib.ledger.choicelists.VoucherTypes' : _("""A list of the available voucher types. Items are instances of
:class:VoucherType`."""),
    'lino_xl.lib.ledger.choicelists.VoucherTypes.item_class' : _("""alias of VoucherType"""),
    'lino_xl.lib.ledger.choicelists.TradeType' : _("""Base class for the choices of TradeTypes."""),
    'lino_xl.lib.ledger.choicelists.TradeType.dc' : _("""The default booking direction."""),
    'lino_xl.lib.ledger.choicelists.TradeType.price_field' : _("""The name and label of the price field to be defined on the
Product
database model."""),
    'lino_xl.lib.ledger.choicelists.TradeType.partner_account_field' : _("""The name and label of the Partner account field to
be defined for this trade type on the SiteConfig database model."""),
    'lino_xl.lib.ledger.choicelists.TradeType.base_account_field' : _("""The name and label of the Base account field to
be defined for this trade type on the SiteConfig database model."""),
    'lino_xl.lib.ledger.choicelists.TradeType.vat_account_field' : _("""The name and label of the VAT account field to be
defined for this trade type on the SiteConfig database model."""),
    'lino_xl.lib.ledger.choicelists.TradeTypes' : _("""A choicelist with the trade types defined for this application."""),
    'lino_xl.lib.ledger.choicelists.TradeTypes.sales' : _("""A sale transaction is when you write an invoice to a customer
and then expect the customer to pay it."""),
    'lino_xl.lib.ledger.choicelists.TradeTypes.purchases' : _("""A purchase transaction is when you get an invoice from a
provider who expects you to pay it."""),
    'lino_xl.lib.ledger.choicelists.TradeTypes.wages' : _("""A wage transaction is when you write a payroll (declare the
fact that you owe some wage to an employee) and later pay it
(e.g. via a payment order)."""),
    'lino_xl.lib.ledger.choicelists.TradeTypes.clearings' : _("""A clearing transaction is when an employee declares that he
paid some invoice for you, and later you pay that money back
to his account."""),
    'lino_xl.lib.ledger.choicelists.TradeTypes.item_class' : _("""alias of TradeType"""),
    'lino_xl.lib.ledger.choicelists.VoucherState' : _("""Base class for items of VoucherStates."""),
    'lino_xl.lib.ledger.choicelists.VoucherState.editable' : _("""Whether a voucher in this state is editable."""),
    'lino_xl.lib.ledger.choicelists.VoucherStates' : _("""lino_xl.lib.ledger.VoucherStates defines the list of
possible states of a voucher."""),
    'lino_xl.lib.ledger.choicelists.VoucherStates.draft' : _("""Draft vouchers can be modified but are not yet visible as movements
in the ledger."""),
    'lino_xl.lib.ledger.choicelists.VoucherStates.registered' : _("""Registered vouchers cannot be modified, but are visible as
movements in the ledger."""),
    'lino_xl.lib.ledger.choicelists.VoucherStates.cancelled' : _("""Cancelled is similar to Draft, except that you cannot edit the
fields. This is used for invoices which have been sent, but the
customer signaled that they doen't agree. Instead of writing a
credit nota, you can decide to just cancel the invoice."""),
    'lino_xl.lib.ledger.choicelists.VoucherStates.signed' : _("""The Signed state is similar to registered, but cannot usually be
deregistered anymore. This state is not visible in the default
configuration. In order to make it usable, you must define a custom
workflow for lino_xl.lib.ledger.VoucherStates."""),
    'lino_xl.lib.ledger.choicelists.VoucherStates.item_class' : _("""alias of VoucherState"""),
    'lino_xl.lib.ledger.fields.DcAmountField' : _("""An editable virtual PriceField to get and set both database fields
amount and dc at once. It may be used only on
models which also defines these two fields."""),
    'lino_xl.lib.ledger.mixins.ProjectRelated' : _("""Model mixin for objects that are related to a project."""),
    'lino_xl.lib.ledger.mixins.ProjectRelated.project' : _("""Pointer to the "project". This field exists only if the
project_model setting of the
lino_xl.lib.ledger plugin is nonempty."""),
    'lino_xl.lib.ledger.mixins.PartnerRelated' : _("""Base class for things that are related to one and only one trade
partner. This is base class for both (1) trade document vouchers
(e.g. invoices or offers) and (2) for the individual entries of
financial vouchers and ledger movements."""),
    'lino_xl.lib.ledger.mixins.PartnerRelated.partner' : _("""The recipient of this document. A pointer to
lino_xl.lib.contacts.models.Partner."""),
    'lino_xl.lib.ledger.mixins.PartnerRelated.payment_term' : _("""The payment terms to be used in this document.  A pointer to
PaymentTerm."""),
    'lino_xl.lib.ledger.mixins.PartnerRelated.recipient' : _("""Alias for the partner"""),
    'lino_xl.lib.ledger.mixins.Matching' : _("""Model mixin for database objects that are considered matching
transactions.  A matching transaction is a transaction that
points to some other movement which it "clears" at least partially."""),
    'lino_xl.lib.ledger.mixins.Matching.match' : _("""Pointer to the movement which is being cleared by
this movement."""),
    'lino_xl.lib.ledger.mixins.VoucherItem' : _("""Base class for items of a voucher."""),
    'lino_xl.lib.ledger.mixins.VoucherItem.voucher' : _("""Pointer to the voucher which contains this item.  Non
nullable.  The voucher must be a subclass of
ledger.Voucher.
The related_name must be 'items'."""),
    'lino_xl.lib.ledger.mixins.VoucherItem.title' : _("""The title of this voucher."""),
    'lino_xl.lib.ledger.mixins.AccountVoucherItem' : _("""Abstract base class for voucher items which point to an account.
This is subclassed by
lino_xl.lib.vat.models.InvoiceItem
and
lino_xl.lib.vatless.models.InvoiceItem.
It defines the account field and some related methods."""),
    'lino_xl.lib.ledger.mixins.AccountVoucherItem.account' : _("""ForeignKey pointing to the account (accounts.Account) that is to be moved."""),
    'lino_xl.lib.ledger.models.Journal' : _("""The model used to store journals.
See cosi.specs.ledger.journals."""),
    'lino_xl.lib.ledger.models.Journal.trade_type' : _("""Pointer to TradeTypes."""),
    'lino_xl.lib.ledger.models.Journal.voucher_type' : _("""Pointer to an item of VoucherTypes."""),
    'lino_xl.lib.ledger.models.Journal.journal_group' : _("""Pointer to an item of JournalGroups."""),
    'lino_xl.lib.ledger.models.Journal.yearly_numbering' : _("""Whether the
number of
vouchers should restart at 1 every year."""),
    'lino_xl.lib.ledger.models.Journal.dc' : _("""The primary booking direction."""),
    'lino_xl.lib.ledger.models.Journal.auto_check_clearings' : _("""Whether to automatically check and update the 'cleared' status
of involved transactions when (de)registering a voucher of
this journal."""),
    'lino_xl.lib.ledger.models.Journal.template' : _("""See PrintableType.template."""),
    'lino_xl.lib.ledger.models.AccountingPeriod' : _("""An accounting period is the smallest time slice to be observed
(declare) in accounting reports. Usually it corresponds to one
month. Except for some small companies which declare per
quarter.  For each period it must be possible to specify the exact
dates during which it is allowed to register vouchers into this
period, and also its "state": whether it is "closed" or not."""),
    'lino_xl.lib.ledger.models.PaymentTerm' : _("""A convention on how an invoice should be paid."""),
    'lino_xl.lib.ledger.models.PaymentTerm.days' : _("""Number of days to add to voucher_date."""),
    'lino_xl.lib.ledger.models.PaymentTerm.months' : _("""Number of months to add to voucher_date."""),
    'lino_xl.lib.ledger.models.PaymentTerm.end_of_month' : _("""Whether to move voucher_date to the end of month."""),
    'lino_xl.lib.ledger.models.PaymentTerm.printed_text' : _("""Used in sales/VatProductInvoice/trailer.html as
follows:"""),
    'lino_xl.lib.ledger.models.Voucher' : _("""A Voucher is a document that represents a monetary transaction."""),
    'lino_xl.lib.ledger.models.Voucher.journal' : _("""The journal into which this voucher has been booked. This is a
mandatory pointer to a Journal instance."""),
    'lino_xl.lib.ledger.models.Voucher.number' : _("""The sequence number of this voucher in the journal."""),
    'lino_xl.lib.ledger.models.Voucher.entry_date' : _("""The date of the journal entry, i.e. when this voucher has been
journalized or booked."""),
    'lino_xl.lib.ledger.models.Voucher.voucher_date' : _("""The date on the voucher, i.e. when this voucher has been
issued by its emitter."""),
    'lino_xl.lib.ledger.models.Voucher.accounting_period' : _("""The accounting period and fiscal year to which this entry is
to be assigned to. The default value is determined from
entry_date."""),
    'lino_xl.lib.ledger.models.Voucher.narration' : _("""A short explanation which ascertains the subject matter of
this journal entry."""),
    'lino_xl.lib.ledger.models.Voucher.currency' : _("""This is currently used only in some print templates."""),
    'lino_xl.lib.ledger.models.Movement' : _("""Represents an accounting movement in the ledger."""),
    'lino_xl.lib.ledger.models.Movement.value_date' : _("""The date at which this movement is to be entered into the
ledger.  This is usually the voucher's entry_date, except
e.g. for bank statements where each item can have its own
value date."""),
    'lino_xl.lib.ledger.models.Movement.voucher' : _("""Pointer to the Voucher who caused this movement."""),
    'lino_xl.lib.ledger.models.Movement.partner' : _("""Pointer to the partner involved in this movement. This may be
blank."""),
    'lino_xl.lib.ledger.models.Movement.seqno' : _("""Sequential number within a voucher."""),
    'lino_xl.lib.ledger.models.Movement.account' : _("""Pointer to the Account that is being moved by this movement."""),
    'lino_xl.lib.ledger.models.Movement.match' : _("""Pointer to the Movement that is being cleared by this
movement."""),
    'lino_xl.lib.ledger.models.Movement.cleared' : _("""Whether"""),
    'lino_xl.lib.ledger.models.Movement.voucher_partner' : _("""A virtual field which returns the partner of the voucher.
For incoming invoices this is the supplier, for outgoing
invoices this is the customer, for financial vouchers this is
empty."""),
    'lino_xl.lib.ledger.models.Movement.voucher_link' : _("""A virtual field which shows a link to the voucher."""),
    'lino_xl.lib.ledger.models.Movement.match_link' : _("""A virtual field which shows a clickable variant of the match
string. Clicking it will open a table with all movements
having that match."""),
    'lino_xl.lib.ledger.models.MatchRule' : _("""A match rule specifies that a movement into given account can
be cleared using a given journal."""),
    'lino_xl.lib.ledger.models.VoucherChecker' : _("""Check for wrong ledger movements"""),
    'lino_xl.lib.ledger.roles.VoucherSupervisor' : _("""Somebody who can edit vouchers which have been written by other
users."""),
    'lino_xl.lib.ledger.ui.Journals' : _("""The default table showing all instances of Journal."""),
    'lino_xl.lib.ledger.ui.Journals.model' : _("""alias of Journal"""),
    'lino_xl.lib.ledger.ui.Vouchers' : _("""The base table for all tables working on Voucher."""),
    'lino_xl.lib.ledger.ui.Vouchers.model' : _("""alias of Voucher"""),
    'lino_xl.lib.ledger.ui.ExpectedMovements' : _("""A virtual table of DueMovement rows, showing
all "expected" "movements (payments)"."""),
    'lino_xl.lib.ledger.ui.DebtsByAccount' : _("""The ExpectedMovements accessible by clicking the "Debts"
action button on an Account."""),
    'lino_xl.lib.ledger.ui.DebtsByAccount.master' : _("""alias of Account"""),
    'lino_xl.lib.ledger.ui.DebtsByPartner' : _("""This is the table being printed in a Payment Reminder.  Usually
this table has one row per sales invoice which is not fully paid.
But several invoices ("debts") may be grouped by match.  If the
partner has purchase invoices, these are deduced from the balance."""),
    'lino_xl.lib.ledger.ui.DebtsByPartner.master' : _("""alias of Partner"""),
    'lino_xl.lib.ledger.ui.PartnerVouchers' : _("""Base class for tables of partner vouchers."""),
    'lino_xl.lib.ledger.ui.PartnerVouchers.model' : _("""alias of Voucher"""),
    'lino_xl.lib.ledger.ui.AccountsBalance' : _("""A virtual table, the base class for different reports that show a
list of accounts with the following columns:"""),
    'lino_xl.lib.ledger.ui.GeneralAccountsBalance' : _("""An AccountsBalance for general accounts."""),
    'lino_xl.lib.ledger.ui.PartnerAccountsBalance' : _("""An AccountsBalance for partner accounts."""),
    'lino_xl.lib.ledger.ui.PartnerAccountsBalance.trade_type' : _("""alias of NotImplementedError"""),
    'lino_xl.lib.ledger.ui.CustomerAccountsBalance' : _("""A PartnerAccountsBalance for the TradeType "sales"."""),
    'lino_xl.lib.ledger.ui.SupplierAccountsBalance' : _("""A PartnerAccountsBalance for the TradeType "purchases"."""),
    'lino_xl.lib.ledger.ui.DebtorsCreditors' : _("""Abstract base class for different tables showing a list of
partners with the following columns:"""),
    'lino_xl.lib.ledger.ui.DebtorsCreditors.d_or_c' : _("""alias of NotImplementedError"""),
    'lino_xl.lib.ledger.ui.Debtors' : _("""Lists those partners who have some debt against us.
DebtorsCreditors."""),
    'lino_xl.lib.ledger.ui.Creditors' : _("""Lists those partners who give us some form of credit.
DebtorsCreditors."""),
    'lino_xl.lib.ledger.ui.ActivityReport' : _("""A report consisting of the following tables:"""),
    'lino_xl.lib.ledger.ui.Movements' : _("""The base table for all tables working on Movement.
Defines filtering parameters and general behaviour."""),
    'lino_xl.lib.ledger.ui.Movements.model' : _("""alias of Movement"""),
    'lino_xl.lib.ledger.ui.AllMovements' : _("""Displayed by Explorer ‣ Accounting ‣ Movements."""),
    'lino_xl.lib.ledger.ui.AllMovements.model' : _("""alias of Movement"""),
    'lino_xl.lib.ledger.ui.MovementsByVoucher' : _("""Show the ledger movements of a voucher."""),
    'lino_xl.lib.ledger.ui.MovementsByVoucher.master' : _("""alias of Voucher"""),
    'lino_xl.lib.ledger.ui.MovementsByVoucher.model' : _("""alias of Movement"""),
    'lino_xl.lib.ledger.ui.MovementsByPartner' : _("""Show the ledger movements of a partner.
See also lino_xl.lib.ledger.models.Movement."""),
    'lino_xl.lib.ledger.ui.MovementsByPartner.master' : _("""alias of Partner"""),
    'lino_xl.lib.ledger.ui.MovementsByPartner.model' : _("""alias of Movement"""),
    'lino_xl.lib.ledger.ui.MovementsByProject' : _("""Show the ledger movements of a project.
See also lino_xl.lib.ledger.models.Movement."""),
    'lino_xl.lib.ledger.ui.MovementsByProject.model' : _("""alias of Movement"""),
    'lino_xl.lib.ledger.ui.MovementsByAccount' : _("""Shows the movements done on a given general account."""),
    'lino_xl.lib.ledger.ui.MovementsByAccount.description' : _("""A virtual field showing a comma-separated list of the
following items:"""),
    'lino_xl.lib.ledger.ui.MovementsByAccount.master' : _("""alias of Account"""),
    'lino_xl.lib.ledger.ui.MovementsByAccount.model' : _("""alias of Movement"""),
    'lino_xl.lib.ledger.ui.MovementsByMatch' : _("""Show all movements having a given match."""),
    'lino_xl.lib.ledger.ui.MovementsByMatch.master' : _("""alias of unicode"""),
    'lino_xl.lib.ledger.ui.MovementsByMatch.model' : _("""alias of Movement"""),
    'lino_xl.lib.ledger.utils.Balance' : _("""Light-weight object to represent a balance, i.e. an amount together
with its booking direction (debit or credit)."""),
    'lino_xl.lib.ledger.utils.Balance.d' : _("""The amount of this balance when it is debiting, otherwise zero."""),
    'lino_xl.lib.ledger.utils.Balance.c' : _("""The amount of this balance when it is crediting, otherwise zero."""),
    'lino_xl.lib.ledger.utils.DueMovement' : _("""A volatile object representing a group of matching movements."""),
    'lino_xl.lib.ledger.utils.DueMovement.match' : _("""The common match string of these movments"""),
    'lino_xl.lib.ledger.utils.DueMovement.dc' : _("""Whether I mean my debts and payments (towards that partner)
or those of the partner (towards me)."""),
    'lino_xl.lib.lists.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.notes.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.notes.choicelists.SpecialType' : _("""Represents a special note type."""),
    'lino_xl.lib.notes.choicelists.SpecialTypes' : _("""The list of special note types which have been declared on this
Site."""),
    'lino_xl.lib.notes.choicelists.SpecialTypes.item_class' : _("""alias of SpecialType"""),
    'lino_xl.lib.notes.models.NoteTypes' : _("""Displays all rows of NoteType."""),
    'lino_xl.lib.notes.models.NoteTypes.model' : _("""alias of NoteType"""),
    'lino_xl.lib.notes.models.EventType' : _("""A possible choice for Note.event_type."""),
    'lino_xl.lib.notes.models.EventTypes' : _("""List of all Event Types."""),
    'lino_xl.lib.notes.models.EventTypes.model' : _("""alias of EventType"""),
    'lino_xl.lib.notes.models.Note' : _("""A note is a dated and timed document written by its author (a
user). For example a report of a meeting or a phone call, or just
some observation. Notes are usually meant for internal use."""),
    'lino_xl.lib.outbox.choicelists.RecipientTypes' : _("""A list of possible values for the type field of a
Recipient."""),
    'lino_xl.lib.outbox.mixins.MailableType' : _("""Mixin for Models that serve as type of a Mailable.
Concrete examples are cal.EventType, cal.GuestRole,
notes.NoteType."""),
    'lino_xl.lib.outbox.mixins.MailableType.templates_group' : _("""Should contain a string "<app_label>/<Model>" of the Mailable
being typed by this MailableType. Example:"""),
    'lino_xl.lib.outbox.mixins.CreateMail' : _("""Creates an outbox mail and displays it."""),
    'lino_xl.lib.outbox.mixins.Mailable' : _("""Mixin for models that provide a "Post" button.  A Mailable model
must also inherit from mixins.Printable or some subclass
thereof."""),
    'lino_xl.lib.outbox.models.Recipient' : _("""Abstract base for inbox.Recipient and outbox.Recipient."""),
    'lino_xl.lib.outbox.models.SendMail' : _("""Sends an outbox.Mail as an email."""),
    'lino_xl.lib.outbox.models.SentByPartner' : _("""Shows the Mails that have been sent to a given Partner."""),
    'lino_xl.lib.outbox.models.SentByPartner.master' : _("""alias of Partner"""),
    'lino_xl.lib.outbox.models.SentByPartner.model' : _("""alias of Mail"""),
    'lino_xl.lib.polls.Plugin' : _("""See /dev/plugins."""),
    'lino_xl.lib.polls.models.Poll' : _("""A series of questions."""),
    'lino_xl.lib.polls.models.AllPolls' : _("""Show all polls of all users."""),
    'lino_xl.lib.polls.models.AllPolls.model' : _("""alias of Poll"""),
    'lino_xl.lib.polls.models.MyPolls' : _("""Show all polls whose author I am."""),
    'lino_xl.lib.polls.models.MyPolls.model' : _("""alias of Poll"""),
    'lino_xl.lib.polls.models.Question' : _("""A question of a poll."""),
    'lino_xl.lib.polls.models.Question.number' : _("""The number of this question within this poll."""),
    'lino_xl.lib.polls.models.ToggleChoice' : _("""Toggle the given choice for the given question in this response."""),
    'lino_xl.lib.polls.models.ResponsesByPartner' : _("""Show all responses for a given partner.  Default view is
get_slave_summary()."""),
    'lino_xl.lib.polls.models.ResponsesByPartner.master' : _("""alias of Partner"""),
    'lino_xl.lib.polls.models.ResponsesByPartner.model' : _("""alias of Response"""),
    'lino_xl.lib.polls.models.AnswersByResponseRow' : _("""Volatile object to represent the one and only answer to a given
question in a given response."""),
    'lino_xl.lib.polls.models.AnswerRemarkField' : _("""An editable virtual field."""),
    'lino_xl.lib.polls.models.AnswersByResponse' : _("""The table used for answering to a poll. The rows of this table are
volatile AnswersByResponseRow instances."""),
    'lino_xl.lib.polls.models.AnswersByResponse.answer_buttons' : _("""A virtual field that displays the currently selected answer(s) for
this question, eventually (if editing is permitted) together with
buttons to modify the selection."""),
    'lino_xl.lib.polls.models.AnswersByResponse.master' : _("""alias of Response"""),
    'lino_xl.lib.polls.models.AnswersByQuestionRow' : _("""Volatile object to represent a row of AnswersByQuestion."""),
    'lino_xl.lib.polls.models.AnswersByQuestion' : _("""The rows of this table are volatile AnswersByQuestionRow
instances."""),
    'lino_xl.lib.polls.models.AnswersByQuestion.master' : _("""alias of Question"""),
    'lino_xl.lib.polls.models.PollResult' : _("""Shows a summay of responses to this poll."""),
    'lino_xl.lib.polls.models.PollResult.master' : _("""alias of Poll"""),
    'lino_xl.lib.polls.models.PollResult.model' : _("""alias of Question"""),
    'lino_xl.lib.polls.roles.PollsUser' : _("""A user who has access to polls functionality."""),
    'lino_xl.lib.polls.roles.PollsStaff' : _("""A user who manages configuration of polls functionality."""),
    'lino_xl.lib.polls.utils.PollStates' : _("""The list of possible states of a Poll. Default is:"""),
    'lino_xl.lib.polls.utils.ResponseStates' : _("""The list of possible states of a Poll. Default is:"""),
    'lino_xl.lib.postings.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.postings.mixins.CreatePostings' : _("""Creates a series of new Postings from this Postable. 
The Postable gives the list of recipients, and there will 
be one Posting for each recipient."""),
    'lino_xl.lib.postings.mixins.Postable' : _("""Mixin for models that provide a "Post" button."""),
    'lino_xl.lib.postings.models.PostingStates' : _("""List of possible values for the state field of a 
Posting."""),
    'lino_xl.lib.postings.models.Posting' : _("""A Posting is the fact that a letter or other item 
has been sent using snail mail."""),
    'lino_xl.lib.products.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.products.models.ProductCat' : _("""A product category is a way to group products."""),
    'lino_xl.lib.products.models.Product' : _("""A product is something you can sell or buy."""),
    'lino_xl.lib.properties.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.properties.models.DoYouLike' : _("""A list of possible answers to questions of type "How much do you
like ...?"."""),
    'lino_xl.lib.properties.models.HowWell' : _("""A list of possible answers to questions of type "How well ...?":
"not at all", "a bit", "moderate", "quite well" and "very well" """),
    'lino_xl.lib.properties.models.PropType' : _("""The type of the values that a property accepts.
Each PropType may (or may not) imply a list of choices."""),
    'lino_xl.lib.properties.models.PropType.default_value' : _("""The default value to set when creating a PropertyOccurence.
This is currently used only in some fixture..."""),
    'lino_xl.lib.properties.models.PropType.limit_to_choices' : _("""not yet supported"""),
    'lino_xl.lib.properties.models.PropType.multiple_choices' : _("""not yet supported"""),
    'lino_xl.lib.properties.models.PropChoice' : _("""A Choice for a given PropType.  text is the text to be displayed
in combo boxes."""),
    'lino_xl.lib.properties.models.PropGroup' : _("""A Property Group defines a list of Properties that fit together
under a common name.  Examples of Property Groups: Skills, Soft
Skills, Obstacles There will be one menu entry per Group."""),
    'lino_xl.lib.properties.models.PropertyOccurence' : _("""A Property Occurence is when a Property occurs, possibly having a
certain value."""),
    'lino_xl.lib.properties.models.ChoicesByType' : _("""Lists all PropChoices for a given PropType."""),
    'lino_xl.lib.properties.models.ChoicesByType.master' : _("""alias of PropType"""),
    'lino_xl.lib.properties.models.ChoicesByType.model' : _("""alias of PropChoice"""),
    'lino_xl.lib.reception.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.reception.Plugin.required_user_groups' : _("""The required user groups for viewing actors of this plugin."""),
    'lino_xl.lib.reception.models.CheckinVisitor' : _("""Mark this visitor as arrived."""),
    'lino_xl.lib.reception.models.ReceiveVisitor' : _("""The "Receive" action on a Guest."""),
    'lino_xl.lib.reception.models.CheckoutVisitor' : _("""The "Checkout" action on a Guest."""),
    'lino_xl.lib.reception.models.AppointmentsByPartner' : _("""Show the participations in upcoming calendar events for a given
partner."""),
    'lino_xl.lib.reception.models.AppointmentsByPartner.model' : _("""alias of Guest"""),
    'lino_xl.lib.reception.models.AppointmentsByPartner.master' : _("""alias of Partner"""),
    'lino_xl.lib.reception.models.ExpectedGuests' : _("""General table of all expected guests."""),
    'lino_xl.lib.reception.models.ExpectedGuests.model' : _("""alias of Guest"""),
    'lino_xl.lib.reception.models.Visitors' : _("""Common base class for the following tables:"""),
    'lino_xl.lib.reception.models.Visitors.model' : _("""alias of Guest"""),
    'lino_xl.lib.reception.models.BusyVisitors' : _("""Show busy visitors (with any user)."""),
    'lino_xl.lib.reception.models.BusyVisitors.model' : _("""alias of Guest"""),
    'lino_xl.lib.reception.models.WaitingVisitors' : _("""Show waiting visitors (for any user)."""),
    'lino_xl.lib.reception.models.WaitingVisitors.model' : _("""alias of Guest"""),
    'lino_xl.lib.reception.models.GoneVisitors' : _("""Show gone visitors (for any user)."""),
    'lino_xl.lib.reception.models.GoneVisitors.model' : _("""alias of Guest"""),
    'lino_xl.lib.reception.models.MyWaitingVisitors' : _("""Show visitors waiting for me."""),
    'lino_xl.lib.reception.models.MyWaitingVisitors.model' : _("""alias of Guest"""),
    'lino_xl.lib.reception.models.MyBusyVisitors' : _("""Show the visitors with whom I am busy."""),
    'lino_xl.lib.reception.models.MyBusyVisitors.model' : _("""alias of Guest"""),
    'lino_xl.lib.reception.models.MyGoneVisitors' : _("""Show my visitors who have gone."""),
    'lino_xl.lib.reception.models.MyGoneVisitors.model' : _("""alias of Guest"""),
    'lino_xl.lib.reception.workflows.CloseMeeting' : _("""Close the meeting (mark it as "took place") and check out all
guests. Ask confirmation naming the guests who need to check out."""),
    'lino_xl.lib.rooms.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.sales.Plugin' : _("""See lino.core.plugin.Plugin."""),
    'lino_xl.lib.sales.models.PaperType' : _("""Which paper (document template) to use when printing an invoice."""),
    'lino_xl.lib.sales.models.SalesDocument' : _("""Common base class for orders.Order and VatProductInvoice."""),
    'lino_xl.lib.sales.models.SalesDocument.print_items_table' : _("""Which table (column layout) to use in the printed document."""),
    'lino_xl.lib.sales.models.VatProductInvoice' : _("""A sales invoice is a legal document which describes that something
(the invoice items) has been sold to a given partner. The partner
can be either a private person or an organization."""),
    'lino_xl.lib.sales.models.VatProductInvoice.balance_before' : _("""The balance of previous payments or debts. On a printed
invoice, this amount should be mentioned and added to the
invoice's amount in order to get the total amount to pay."""),
    'lino_xl.lib.sales.models.VatProductInvoice.balance_to_pay' : _("""The balance of all movements matching this invoice."""),
    'lino_xl.lib.sales.models.VatProductInvoice.print_items_table' : _("""alias of ItemsByInvoicePrint"""),
    'lino_xl.lib.sales.models.InvoicesByJournal' : _("""Shows all invoices of a given journal (whose voucher_type must be
VatProductInvoice)"""),
    'lino_xl.lib.sales.models.InvoicesByJournal.master' : _("""alias of Journal"""),
    'lino_xl.lib.sales.models.InvoicesByJournal.model' : _("""alias of VatProductInvoice"""),
    'lino_xl.lib.sales.models.DueInvoices' : _("""Shows all due product invoices."""),
    'lino_xl.lib.sales.models.DueInvoices.model' : _("""alias of VatProductInvoice"""),
    'lino_xl.lib.sales.models.ProductDocItem' : _("""Mixin for voucher items which potentially refer to a product."""),
    'lino_xl.lib.sales.models.ProductDocItem.description' : _("""A multi-line rich text to be printed in the resulting printable
document."""),
    'lino_xl.lib.sales.models.InvoiceItem' : _("""An item of a sales invoice."""),
    'lino_xl.lib.sales.models.InvoiceItems' : _("""Shows all sales invoice items."""),
    'lino_xl.lib.sales.models.InvoiceItems.model' : _("""alias of InvoiceItem"""),
    'lino_xl.lib.sales.models.ItemsByInvoicePrint' : _("""The table used to render items in a printable document."""),
    'lino_xl.lib.sales.models.ItemsByInvoicePrint.description_print' : _("""TODO: write more about it."""),
    'lino_xl.lib.sales.models.ItemsByInvoicePrint.master' : _("""alias of VatProductInvoice"""),
    'lino_xl.lib.sales.models.ItemsByInvoicePrint.model' : _("""alias of InvoiceItem"""),
    'lino_xl.lib.sales.models.ItemsByInvoicePrintNoQtyColumn' : _("""Alternative column layout to be used when printing an invoice."""),
    'lino_xl.lib.sales.models.ItemsByInvoicePrintNoQtyColumn.master' : _("""alias of VatProductInvoice"""),
    'lino_xl.lib.sales.models.ItemsByInvoicePrintNoQtyColumn.model' : _("""alias of InvoiceItem"""),
    'lino_xl.lib.sepa.Plugin' : _("""See lino.core.plugin.Plugin."""),
    'lino_xl.lib.sepa.fields.UppercaseTextFieldElement' : _("""A CharFieldElement which accepts only upper-case characters."""),
    'lino_xl.lib.sepa.fields.UppercaseTextField' : _("""A custom CharField that accepts only uppercase caracters."""),
    'lino_xl.lib.sepa.fields.BICField' : _("""Database field used to store a BIC."""),
    'lino_xl.lib.sepa.fields.IBANField' : _("""Database field used to store an IBAN."""),
    'lino_xl.lib.sepa.mixins.BankAccount' : _("""Adds a field bank_account and its chooser."""),
    'lino_xl.lib.sepa.mixins.Payable' : _("""Model mixin for database objects that are considered payable
transactions. To be combined with some mixin which defines a
field partner."""),
    'lino_xl.lib.sepa.mixins.Payable.payment_term' : _("""See lino_xl.lib.ledger.mixins.PartnerRelated.payment_term"""),
    'lino_xl.lib.sepa.mixins.Payable.title' : _("""A char field with a description for this transaction."""),
    'lino_xl.lib.sepa.mixins.BankAccountChecker' : _("""Checks for the following plausibility problems:"""),
    'lino_xl.lib.sepa.mixins.BankAccountChecker.model' : _("""alias of BankAccount"""),
    'lino_xl.lib.sepa.models.Account' : _("""A bank account related to a given Partner."""),
    'lino_xl.lib.sepa.models.Account.statements' : _("""A virtual field which displays the date of the last imported
statement for this account. Clicking on this date will open
the B2C account <lino_cosi.lib.b2c.models.Account> with same
IBAN number."""),
    'lino_xl.lib.sepa.models.AccountsByPartner' : _("""Show the bank account(s) defined for a given partner. To be
included to a detail window on partner."""),
    'lino_xl.lib.sepa.models.AccountsByPartner.master' : _("""alias of Partner"""),
    'lino_xl.lib.sepa.models.AccountsByPartner.model' : _("""alias of Account"""),
    'lino_xl.lib.sepa.roles.SepaUser' : _("""Can see imported statements and movements per partner."""),
    'lino_xl.lib.sepa.roles.SepaStaff' : _("""Can see imported statements and movements also globally in the
:menuselection`Explorer` menu."""),
    'lino_xl.lib.stars.Plugin' : _("""See lino.core.plugin.Plugin."""),
    'lino_xl.lib.stars.models.Star' : _("""Represents the fact that a given database object is starred by a
given User."""),
    'lino_xl.lib.stars.models.Star.owner' : _("""The starred database object"""),
    'lino_xl.lib.stars.models.Star.user' : _("""The starring user (pointer to :class:lino.modlib.users.models.User`"""),
    'lino_xl.lib.teams.Plugin' : _("""See lino.core.Plugin."""),
    'lino_xl.lib.tim2lino.Plugin' : _("""See lino.core.plugin.Plugin."""),
    'lino_xl.lib.tim2lino.Plugin.languages' : _("""The language distribution used in the database to import. Mandatory
parameter. No default value."""),
    'lino_xl.lib.tim2lino.Plugin.use_dbfread' : _("""Whether to use Ole Martin Bjorndalen's dbfread package to read the file."""),
    'lino_xl.lib.tim2lino.Plugin.use_dbf_py' : _("""Whether to use Ethan Furman's dbf package to read the file."""),
    'lino_xl.lib.tim2lino.Plugin.dbf_table_ext' : _("""The file extension of TIM tables. Meaningful values are '.DBF' or
.FOX."""),
    'lino_xl.lib.topics.Plugin' : _("""See lino.core.plugin.Plugin."""),
    'lino_xl.lib.topics.models.TopicGroup' : _("""A group of topics is the default way to group topics."""),
    'lino_xl.lib.topics.models.Interest' : _("""An interest is the fact that a given partner is interested in a
given topic."""),
    'lino_xl.lib.topics.models.Topic' : _("""A topic is something somebody can be interested in."""),
    'lino_xl.lib.vat.Plugin' : _("""See lino.core.plugin.Plugin."""),
    'lino_xl.lib.vat.Plugin.vat_quarterly' : _("""Set this to True to support quarterly VAT declarations.
Used by lino_cosi.lib.declarations."""),
    'lino_xl.lib.vat.Plugin.default_vat_regime' : _("""The default VAT regime. If this is specified as a string, Lino will
resolve it at startup into an item of VatRegimes."""),
    'lino_xl.lib.vat.Plugin.default_vat_class' : _("""The default VAT class. If this is specified as a string, Lino will
resolve it at startup into an item of VatClasses."""),
    'lino_xl.lib.vat.choicelists.VatClasses' : _("""A VAT class is a direct or indirect property of a trade object
(e.g. a Product) which determines the VAT rate to be used.  It
does not contain the actual rate because this still varies
depending on your country, the time and type of the operation, and
possibly other factors."""),
    'lino_xl.lib.vat.choicelists.VatRegime' : _("""Base class for choices of VatRegimes."""),
    'lino_xl.lib.vat.choicelists.VatRegime.item_vat' : _("""Whether unit prices are VAT included or not."""),
    'lino_xl.lib.vat.choicelists.VatRegimes' : _("""The VAT regime is a classification of the way how VAT is being
handled, e.g. whether and how it is to be paid."""),
    'lino_xl.lib.vat.choicelists.VatRegimes.item_class' : _("""alias of VatRegime"""),
    'lino_xl.lib.vat.mixins.PartnerDetailMixin' : _("""Defines a panel ledger, to be added as a tab panel to your
layout's main element."""),
    'lino_xl.lib.vat.mixins.PartnerDetailMixin.ledger' : _("""Shows the tables VouchersByPartner and MovementsByPartner."""),
    'lino_xl.lib.vat.mixins.VatTotal' : _("""Model mixin which defines the fields total_incl, total_base
and total_vat.  Used for both the document header
(VatDocument) and for each item (VatItemBase)."""),
    'lino_xl.lib.vat.mixins.VatTotal.total_incl' : _("""A lino.core.fields.PriceField which stores the total
amount VAT included."""),
    'lino_xl.lib.vat.mixins.VatTotal.total_base' : _("""A lino.core.fields.PriceField which stores the total
amount VAT excluded."""),
    'lino_xl.lib.vat.mixins.VatTotal.total_vat' : _("""A lino.core.fields.PriceField which stores the amount
of VAT."""),
    'lino_xl.lib.vat.mixins.VatTotal.auto_compute_totals' : _("""Set this to True on subclasses who compute their totals
automatically, i.e. the fields total_base,
total_vat and total_incl are disabled.  This is
set to True for lino_xl.lib.sales.models.SalesDocument."""),
    'lino_xl.lib.vat.mixins.VatDocument' : _("""Abstract base class for invoices, offers and other vouchers."""),
    'lino_xl.lib.vat.mixins.VatDocument.partner' : _("""Mandatory field to be defined in another class."""),
    'lino_xl.lib.vat.mixins.VatDocument.refresh_after_item_edit' : _("""The total fields of an invoice are currently not automatically
updated each time an item is modified.  Users must click the
Save or the Register button to see the invoices totals."""),
    'lino_xl.lib.vat.mixins.VatDocument.vat_regime' : _("""The VAT regime to be used in this document.  A pointer to
VatRegimes."""),
    'lino_xl.lib.vat.mixins.VatItemBase' : _("""Model mixin for items of a VatTotal."""),
    'lino_xl.lib.vat.mixins.VatItemBase.vat_class' : _("""The VAT class to be applied for this item. A pointer to
VatClasses."""),
    'lino_xl.lib.vat.mixins.QtyVatItemBase' : _("""Model mixin for items of a VatTotal, adds unit_price and
qty."""),
    'lino_xl.lib.vat.models.VatRule' : _("""A rule which defines how VAT is to be handled for a given invoice
item."""),
    'lino_xl.lib.vat.models.VatRule.vat_regime' : _("""The regime for which this rule applies. Pointer to
VatRegimes."""),
    'lino_xl.lib.vat.models.VatRule.rate' : _("""The VAT rate to be applied. Note that a VAT rate of 20 percent is
stored as 0.20 (not 20)."""),
    'lino_xl.lib.vat.models.VatRule.can_edit' : _("""Whether the VAT amount can be modified by the user. This applies
only for documents with VatTotal.auto_compute_totals set
to False."""),
    'lino_xl.lib.vat.models.VatAccountInvoice' : _("""An invoice for which the user enters just the bare accounts and
amounts (not products, quantities, discounts)."""),
    'lino_xl.lib.vat.models.InvoiceItem' : _("""An item of an account invoice."""),
    'lino_xl.lib.vat.ui.VatRules' : _("""The table of all lino_xl.lib.vat.models.VatRule objects."""),
    'lino_xl.lib.vat.ui.VatRules.model' : _("""alias of VatRule"""),
    'lino_xl.lib.vat.ui.InvoiceDetail' : _("""The detail layout used by Invoices."""),
    'lino_xl.lib.vat.ui.Invoices' : _("""The table of all
VatAccountInvoice
objects."""),
    'lino_xl.lib.vat.ui.Invoices.model' : _("""alias of VatAccountInvoice"""),
    'lino_xl.lib.vat.ui.InvoicesByJournal' : _("""Shows all invoices of a given journal (whose
voucher_type
must be lino_xl.lib.vat.models.VatAccountInvoice)"""),
    'lino_xl.lib.vat.ui.InvoicesByJournal.master' : _("""alias of Journal"""),
    'lino_xl.lib.vat.ui.InvoicesByJournal.model' : _("""alias of VatAccountInvoice"""),
    'lino_xl.lib.vat.ui.VouchersByPartner' : _("""A lino.core.tables.VirtualTable which shows all VatDocument
vouchers by lino_xl.lib.contacts.models.Partner. It has a
customized slave summary."""),
    'lino_xl.lib.vat.ui.VouchersByPartner.master' : _("""alias of Partner"""),
    'lino_xl.lib.vatless.Plugin' : _("""See lino.core.plugin.Plugin."""),
    'lino_xl.lib.vatless.mixins.PartnerDetailMixin' : _("""Defines a panel ledger, to be added as a tab panel to your
layout's main element."""),
    'lino_xl.lib.vatless.mixins.PartnerDetailMixin.ledger' : _("""Shows the tables vatless.VouchersByPartner and
ledger.MovementsByPartner."""),
    'lino_xl.lib.vatless.models.AccountInvoice.auto_compute_totals' : _("""Set this to True on subclasses who compute their totals
automatically, i.e. which have the field amount disabled."""),
    'lino_xl.lib.vatless.models.InvoiceItem' : _("""An item of an AccountInvoice."""),
    'lino_xl.lib.vatless.ui.ItemsByInvoice' : _("""This is the "content" part of an invoice."""),
    'lino_xl.lib.vatless.ui.ItemsByProjectInvoice' : _("""Like ItemsByInvoice, but in a project invoice we don't
want to have a project column per item."""),
    'lino_xl.lib.vatless.ui.InvoicesByJournal' : _("""Shows all simple invoices of a given journal (whose
Journal.voucher_type must be
lino_xl.lib.sales.models.AccountInvoice)."""),
    'lino_xl.lib.vatless.ui.VouchersByPartner' : _("""Shows all ledger vouchers of a given partner."""),
}
