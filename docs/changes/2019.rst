.. include:: /../../book/docs/shared/include/defs.rst
.. _xl.changes.2019:

=======================
Changes 2019 in Lino XL
=======================

.. Note: Changes are grouped by date. Every new day gives a new
   heading. If a release deserves separate release notes, we create a separate
   document and this file will have a link to it.

.. contents::
  :local:

2019-02-08
==========

.. currentmodule:: lino.modlib.uploads

The :mod:`lino.modlib.uploads` plugin has been extended to support
:ticket:`2826`.

Until now an :class:`Upload` could represent either an uploaded file (the
original meaning) or just an entry representing some external document to be
monitored by its author, without any uploaded file. With :ticket:`2826` we add
a third possibility a "library file", i.e. a file that has been stored on some
volume using some other method than uploading.

Concretely:

- Added a new model :class:`Volume`

- Added two fields :attr:`volume` and :attr:`library_file` to the
  :class:`Upload` model.

- The detail of a :class:`lino_xl.lib.vat.VatAccountInvoice` now shows
  the :class:`UploadsByController` slave table.

  But what if an application wants to
  use :mod:`lino_xl.lib.vat` without :mod:`lino.modlib.uploads`?  e.g.
  :ref:`tera`. Quick fix : add plugins also to these applications.

- The insert_layout of :class:`UploadsByControler` does *not* include the
  :attr:`volume`, but instead the controller (owner) decides which volume is to
  be used.

  IOW a new method :meth:`UploadController.get_uploads_volume`.  The field
  should be hidden or at least readonly when the owner says that there is no
  volume.  And :class:`lino_xl.lib.vat.VatAccountInvoice` should implement this
  method by asking the journal.  New field
  :attr:`ledger.Journal.uploads_volume`.

- Every voucher is now potentially an upload controller (:class:`ledger.Voucher
  <lino_xl.lib.ledger.Voucher>` inherits from :class:`UploadController`).

  Added a new field :attr:`lino_xl.lib.ledger.Journal.uploads_volume`, and the
  :meth:`UploadController.get_uploads_volume` for a
  :class:`lino_xl.lib.ledger.Voucher` returns this.



2019-02-03
==========

.. currentmodule:: lino_xl.lib.beid

In :mod:`lino_xl.lib.beid` we moved some functionality from
:class:`BeIdCardHolder` into a separate new mixin :class:`SSIN` which can be
used also when the plugin is not installed.  Existing applications don't need
to adapt.  Converted docstrings to prosa docs.

More changes in the :mod:`lino_xl.lib.orders` plugin which is still work in
progress.



2019-01-31
==========

.. currentmodule:: lino_xl.lib.products

In :mod:`lino_xl.lib.products` we now have a new model :class:`PriceRule` and a
new choicelist :class:`PriceFactors` (taken from :mod:`lino_tera.lib.courses`).
For :ref:`tera` this means a minor data migration: change "courses.PriceRule"
to "products.PriceRule" in the :xfile:`restore.py` field.

We have a new plugin :mod:`lino_xl.lib.orders` that is being developed for
:ref:`presto`.  Not yet stable.

2019-01-24
==========

The field :attr:`lino_xl.lib.contacts.Role.type` had a verbose name "Role"
which was useless and irritating because "Function" is clear enough and the
same word as in :menuselection:`Configure --> Contacts --> Functions`.

Optimized the detail layout of 
:class:`lino_xl.lib.ledger.Journal` and 
the library base class for partner details (:class:`lino_xl.lib.contacts.PartnerDetail`).

Fixed :ticket:`2813` (the summary of :class:`lino_xl.lib.blogs.LatestEntries` 
inserted an additional line break when rendering links to database objects using 
a memo command.  Also the German translation did not correctly show date and author 
of a blog entry in this summary.


2019-01-22
==========

Fixed a little bug in :mod:`lino_xl.lib.vat` : when you created an invoice in a
journal with `edit_totals` and leave the total field empty, Lino said
"TypeError: unsupported operand type(s) for -: 'NoneType' and 'Decimal'"

Added intersphinx_urls, srcref_url and doc_trees settings to the main module so
that other doctrees can link to the docs.

Released version 19.1.1

2019-01-21
==========

The change notes for :ref:`xl` are now separated from those of :ref:`lino`.

New plugin attribute :attr:`lino_xl.lib.tim2lino.Plugin.timloader_kwargs` to be
used e.g. as follows::

    def setup_plugins(self):
        self.plugins.tim2lino.configure(
            languages='de fr',
            timloader_kwargs=dict(etat_registered="C"))
        super(Site, self).setup_plugins()

This new feature is not tested because the reason was just a missing "u"
prefix.


2019-01-18
==========

The categories (:class:`lino_xl.lib.products.ProductCat`) now have a field
:attr:`product_type <lino_xl.lib.products.ProductCat.product_type>` (i.e. all
applications that depend on it need to migrate).  This is because I realized
that categories are not useless.  The difference between the "category" and the
"type" of a product is that end-users can edit the former while the latter are
to be provided by the application developer.

I fixed a subtle bug in the :meth:`lino_xl.lib.ledger.Plugin.setup_main_menu`
method: the Accounting menu came before the Sales menu because a menu for
"ledger" was being created before looping over the journal groups. I removed an
unused plugin attribute :attr:`intrusive_menu` (whether a journal group is
"intrusive" or not now depends on its :attr:`menu_group`).

2019-01-17
==========

The :attr:`ref_max_length <lino.mixins.Referrable.ref_max_length>` for
:class:`lino_xl.lib.ledger.Journal` is now 5 instead of the default 40.

Printing invoices was broken (since we changed the default build method from
appy to weasy).  It said "No template found for
sales/VatProductInvoice/default.weasy.html, excerpts/default.weasy.html". We
created a new template :xfile:`sales/VatProductInvoice/default.weasy.html` (in
the :xfile:`config` directory of :mod:`lino_xl.lib.sales`).


2019-01-04
==========

We released XL 19.1.0

The fields :attr:`addr2` and :attr:`prefix` are now mostly hidden in forms. We
consider them obsolete.  :mod:`lino_xl.lib.contacts`.


